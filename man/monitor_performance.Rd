% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.r
\name{monitor_performance}
\alias{monitor_performance}
\title{Performance monitoring function for grepreaper operations}
\usage{
monitor_performance(expr, show_details = FALSE)
}
\arguments{
\item{expr}{Expression to evaluate and monitor (use curly braces for multiple statements)}

\item{show_details}{Logical; if TRUE, displays detailed performance metrics to console}
}
\value{
A list containing performance metrics:
  \item{execution_time_seconds}{Execution time in seconds}
  \item{memory_used_mb}{Memory usage in megabytes}
  \item{timestamp}{Timestamp when monitoring completed}
}
\description{
Tracks execution time and memory usage of expressions, providing detailed
performance metrics for grepreaper operations. This is useful for benchmarking
different approaches and identifying performance bottlenecks in data processing
workflows.
}
\examples{
# Monitor a simple operation
perf <- monitor_performance({
  result <- grep_read(files = "data.csv", pattern = "test")
}, show_details = TRUE)

# Monitor multiple operations
perf_multi <- monitor_performance({
  data1 <- grep_read(files = "file1.csv", pattern = "error")
  data2 <- grep_read(files = "file2.csv", pattern = "warning")
  combined <- rbind(data1, data2)
})

# Access specific metrics
cat("Operation took:", round(perf_multi$execution_time_seconds, 3), "seconds\n")
cat("Memory used:", round(perf_multi$memory_used_mb, 2), "MB\n")

}
