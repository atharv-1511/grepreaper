% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grep_read.r
\name{grep_read}
\alias{grep_read}
\title{grep_read: Efficiently read and filter lines from one or more files using grep}
\usage{
grep_read(files = NULL, path = NULL, file_pattern = NULL,
  pattern = "", invert = FALSE, ignore_case = TRUE, fixed = FALSE,
  show_cmd = FALSE, recursive = FALSE, word_match = FALSE,
  show_line_numbers = FALSE, only_matching = FALSE,
  count_only = FALSE, nrows = Inf, skip = 0, header = TRUE,
  col.names = NULL, include_filename = NULL, search_column = NULL,
  show_progress = FALSE, ...)
}
\arguments{
\item{files}{Character vector of file paths to read.}

\item{path}{Optional. Directory path to search for files.}

\item{file_pattern}{Optional. A pattern to filter filenames when using the
\code{path} argument. Passed to \code{list.files}.}

\item{pattern}{Pattern to search for within files (passed to grep).}

\item{invert}{Logical; if TRUE, return non-matching lines.}

\item{ignore_case}{Logical; if TRUE, perform case-insensitive matching (default: TRUE).}

\item{fixed}{Logical; if TRUE, pattern is a fixed string, not a regular
expression.}

\item{show_cmd}{Logical; if TRUE, return the grep command string instead of
executing it.}

\item{recursive}{Logical; if TRUE, search recursively through directories.}

\item{word_match}{Logical; if TRUE, match only whole words.}

\item{show_line_numbers}{Logical; if TRUE, include line numbers from source
files. Headers are automatically removed and lines renumbered.}

\item{only_matching}{Logical; if TRUE, return only the matching part of the
lines.}

\item{count_only}{Logical; if TRUE, return only the count of matching lines.}

\item{nrows}{Integer; maximum number of rows to read.}

\item{skip}{Integer; number of rows to skip.}

\item{header}{Logical; if TRUE, treat first row as header.}

\item{col.names}{Character vector of column names.}

\item{include_filename}{Logical; if TRUE, include source filename as a column.}

\item{search_column}{Character; name of specific column to search in (if NULL, searches all columns).}

\item{show_progress}{Logical; if TRUE, show progress indicators.}

\item{...}{Additional arguments passed to fread.}
}
\value{
A data.table with different structures based on the options:
\itemize{
\item Default: Data columns with original types preserved
\item show_line_numbers=TRUE: Additional 'line_number' column (integer)
\item include_filename=TRUE: Additional 'source_file' column (character)
\item only_matching=TRUE: Single 'match' column with matched substrings
\item count_only=TRUE: 'source_file' and 'count' columns
\item show_cmd=TRUE: Character string containing the grep command
}
}
\description{
grep_read: Efficiently read and filter lines from one or more files using grep,
returning a data.table.
}
\note{
When searching for literal strings (not regex patterns), set
\code{fixed = TRUE} to avoid regex interpretation. For example, searching for
"3.94" with \code{fixed = FALSE} will match "3894" because "." is a regex
metacharacter.

Header rows are automatically handled:
\itemize{
\item With show_line_numbers=TRUE: Headers (line_number=1) are removed and
lines renumbered
\item Without line numbers: Headers matching column names are removed
\item Empty rows and all-NA rows are automatically filtered out
}
}
\examples{
\dontrun{
# Basic usage - read and filter CSV data
data <- grep_read(files = "data.csv", pattern = "error")

# Multiple files with line numbers and filenames
results <- grep_read(
  files = c("log1.txt", "log2.txt"),
  pattern = "WARNING",
  show_line_numbers = TRUE,
  include_filename = TRUE
)

# Search in specific directory
dir_data <- grep_read(
  path = "logs/",
  file_pattern = "\\.log$",
  pattern = "failed",
  recursive = TRUE
)

# Count matches only
counts <- grep_read(
  files = "large_file.txt",
  pattern = "ERROR",
  count_only = TRUE
)

# Search specific column
column_data <- grep_read(
  files = "data.csv",
  pattern = "value",
  search_column = "status"
)
}
}
